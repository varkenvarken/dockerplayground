version: '3.7'

# define secrets
secrets:
    mysql-root:
        file: mysqlrootpassword.txt

# define services (we pass .env to have the same environment vars inside the compose file as in the containers
services:

  dbserver_entity:
    image: dbserver_entity
    # no exposed ports
    networks:
      - appnetwork
    # use a secret (and the database name is just passed on from the .env file)
    environment:
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/mysql-root
    env_file: .env
    # give access to a secret
    secrets:
      - mysql-root
    restart: on-failure
    build:
      context: .
      dockerfile: dbserver_entity/Dockerfile

  objectstore:
    image: objectstore
    ports:
    # needs to be accessible from the browser as long as we don't have a reverse proxy
      - 5555:5555
    networks:
      - appnetwork
    # use a secret (and the database name is just passed on from the .env file)
    environment:
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/mysql-root
    env_file: .env
    # give access to a secret
    secrets:
      - mysql-root
    depends_on:
      - dbserver_entity
    restart: on-failure
    build:
      context: .
      dockerfile: objectstore/Dockerfile

  crudapp:
    image: crudapp
    ports:
    # needs to be accessible from the browser, this is our main entry point
      - 8000:8000
    networks:
      - appnetwork
    depends_on:
      - objectstore
    restart: on-failure
    build:
      context: .
      dockerfile: crudapp/Dockerfile

networks:
  appnetwork:

