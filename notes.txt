docker pull mysql
docker create network appnetwork
# this doesn't expose port 3306 to the host
docker run --name sqlserver --network appnetwork -e MYSQL_ROOT_PASSWORD=secret -d mysql
# this does (but not that this container will not restart automatically if docker reboots)
docker run --name dbserver --network appnetwork -p 3306:3306 -e MYSQL_ROOT_PASSWORD=secret -d mysql
# start mysql client in a separate container
docker run --name sqlclient -it --network appnetwork --rm mysql mysql -hsqlserver -uroot -p

# next steps should eventually end up in a (multistage) Dockerfile for our sqlserver

# create a new database
CREATE DATABASE log_db;
# create a new user for local and remote access to log_db
CREATE USER 'dbuser'@'localhost' IDENTIFIED BY 'secret';
CREATE USER 'dbuser'@'%' IDENTIFIED BY 'secret';
GRANT ALL PRIVILEGES ON log_db.* TO 'dbuser'@'localhost';
GRANT ALL ON log_db.* TO 'dbuser'@'%';

# next steps should eventually end up in a (multistage) Dockerfile for our appserver (written in Python)

# make sure we have a mysql connector
python -m pip install mysql-connector-python

# in the /webapp dir, test the connection
python test.py


# building from Dockerfile
docker build -t mywebapp .

# running the container
docker run -d --rm --name mywebapp -p 8000:8000 --network appnetwork mywebapp


python -m pip install falcon
python -m pip install SQLAlchemy
python -m pip install falcon-autocrud
