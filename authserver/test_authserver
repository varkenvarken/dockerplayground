#!/bin/bash

# switch to same directory as this script
cd "${0%/*}"

export DOMAIN=127.0.0.1
export APPLICATION=/dummy
export LOGINSCREEN=/dummy/loginscreen
# next two are relative (point to the same server)
export CONFIRMREGISTRATION=confirmregistrationu
export RESETPASSWORD=resetpassword

export DATABASE=user.db
export ADMIN_USER=test@example.org
export ADMIN_PASSWORD=s3Cret!!

export DEBUGLEVEL=INFO

export SESSION=./mysession
export RESPONSE=./myresponse
export SERVERLOG=./logfile

echo pytest unit tests

PYTHONPATH=src coverage run --omit '/usr/*,*/site-packages/*' -m pytest > unittest_report.txt
if [ $? -eq 0 ]
then
  echo ": unit tests pass"
else
  echo ": unit tests fail"
  exit 1
fi
coverage html
coverage report > coverage_report.txt

echo functional tests

http="http --ignore-stdin --timeout=5"
# make sure we always terminate the server
set -e
clean_up () {
    ARG=$?
    echo
    echo "removing server"
    kill %1
    exit $ARG
} 
trap clean_up EXIT

# start the server in the background and make sure it has a bit of time to startup
rm -f $DATABASE $SESSION $RESPONSE
PYTHONPATH=src python -m authserver -d $DATABASE > $SERVERLOG 2>&1 &
sleep 2

echo -n "check: GET localhost:8005  --> 404"
$http -ph GET localhost:8005 | head -1 | grep ' 404 ' > /dev/null
if [ $? -eq 0 ]
then
  echo ": pass"
else
  echo ": fail"
  exit 1
fi

echo -n "check: GET localhost:8005/login  --> 404"
$http -ph GET localhost:8005/login | head -1 | grep ' 404 ' > /dev/null
if [ $? -eq 0 ]
then
  echo ": pass"
else
  echo ": fail"
  exit 1
fi

echo -n "check: POST localhost:8005/login  --> 303"
$http -ph POST localhost:8005/login | head -1 | grep ' 303 ' > /dev/null
if [ $? -eq 0 ]
then
  echo ": pass"
else
  echo ": fail"
  exit 1
fi

echo -n "check: POST localhost:8005/login  --> Location: $LOGINSCREEN?failed"
$http -ph POST localhost:8005/login | grep "Location: $LOGINSCREEN?failed" > /dev/null
if [ $? -eq 0 ]
then
  echo ": pass"
else
  echo ": fail"
  exit 1
fi

echo -n "check: POST localhost:8005/login email=$ADMIN_USER password=$ADMIN_PASSWORD login=Login  --> 200"
$http -ph -f POST localhost:8005/login email=$ADMIN_USER password=$ADMIN_PASSWORD login=Login > /dev/null
if [ $? -eq 0 ]
then
  echo ": pass"
else
  echo ": fail"
  exit 1
fi

echo -n "check: POST localhost:8005/login email=$ADMIN_USER password=$ADMIN_PASSWORD login=Login  --> Location: $APPLICATION"
$http -ph -f POST localhost:8005/login email=$ADMIN_USER password=$ADMIN_PASSWORD login=Login | grep "Location: $APPLICATION" > /dev/null
if [ $? -eq 0 ]
then
  echo ": pass"
else
  echo ": fail"
  exit 1
fi

echo -n "check: POST localhost:8005/login email=$ADMIN_USER password=$ADMIN_PASSWORD login=Login  --> Correct cookie"
$http -ph -f POST localhost:8005/login email=$ADMIN_USER password=$ADMIN_PASSWORD login=Login | grep -P "session=[0-9a-f]{32};\s+Domain=$DOMAIN;" > /dev/null
if [ $? -eq 0 ]
then
  echo ": pass"
else
  echo ": fail"
  exit 1
fi

echo -n "check: POST localhost:8005/login email=unknown@example.org password=$ADMIN_PASSWORD login=Login  --> cookie None"
$http -ph -f POST localhost:8005/login email=unknown@example.org password=$ADMIN_PASSWORD login=Login | grep -P "session=None;\s+Domain=$DOMAIN;" > /dev/null
if [ $? -eq 0 ]
then
  echo ": pass"
else
  echo ": fail"
  exit 1
fi

# unfortunately httpie doesn't store cookies as it should so sessions are useless and we have to store the session cookie ourselves
echo -n "check: login"
$http -ph -f POST localhost:8005/login email=$ADMIN_USER password=$ADMIN_PASSWORD login=Login | grep -P "session=[0-9a-f]{32}" > $SESSION
sessioncookie=`grep -oE "session=[0-9a-f]{32}" $SESSION`
sessionid=`echo  $sessioncookie | grep -oE "[0-9a-f]{32}"`
if [ $? -eq 0 ]
then
  echo ": pass"
else
  echo ": fail"
  exit 1
fi
echo -n "check: verifysession 200 ok"
$http -phb -f POST localhost:8005/verifysession sessionid=$sessionid > $RESPONSE
if [ $? -eq 0 ]
then
  echo ": pass"
else
  echo ": fail"
  exit 1
fi
echo -n "check: verifysession body contains email=$ADMIN_USER"
grep "email=$ADMIN_USER" $RESPONSE > /dev/null
if [ $? -eq 0 ]
then
  echo ": pass"
else
  echo ": fail"
  exit 1
fi

echo -n "check: logout"
$http -ph -f POST localhost:8005/logout Cookie:$sessioncookie | head -1 | grep ' 200 ' > /dev/null
if [ $? -eq 0 ]
then
  echo ": pass"
else
  echo ": fail"
  exit 1
fi
echo -n "check: verifysession expired 401 "
$http -ph -f POST localhost:8005/verifysession sessionid=$sessionid  | head -1 | grep ' 401 ' > /dev/null
if [ $? -eq 0 ]
then
  echo ": pass"
else
  echo ": fail"
  exit 1
fi

echo tests done
